issue with persisting the data, @transactional

thoughts about the project

issue with permission
do i give roles?
or do i give permissions or both for maximum modularity?

where do i save the fees.
 do i save the fees in the treatment entity or in the appointment as a whole?
 good for audit
 do i only let one doctor for per appointment? or no. an appointment could be for cleaning teeth and also for braces.
 which will be 2 doctors. and so i made the cost per treatment since each could have a cost

 problems with persisting

 simplicty instead of creatin a method that takes email and if doesnt get  email it changes the authenticated user data (this is helpful if admin wants to change a different users data they use the same method)
 to maybe make 2 methods one for admin and one for user.


 in backend in controller, do i make the controller return a dto? or a response entity or just the entity?

troubles i encounterd, registering and jwt token stuff,  i cast all emails to lowercase


when to use dto? do i use dto all the time or no?

secure endpoints at controller level? bussiness logic level? or both?

repo.flush() ?

writing the full strcture of the program and how apis gonna interact saves tremendous time later on
 theoratical is as imnportant as practical.

 when to reatrun dtos,when not to.